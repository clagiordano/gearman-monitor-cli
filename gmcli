#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  gmcli
#
#  Version 0.1
#
#  Copyright 2016 Claudio Giordano <claudio.giordano@autistici.org>
#
#  License GPLv3 https://www.gnu.org/licenses/gpl.html

import sys
import os
import time
#import tempfile
#import ConfigParser
#import argparse
#from distutils.spawn import find_executable
from subprocess import Popen, PIPE, call
#import ConfigParser
import re
import gearman

class GearmanManagerCli(object):
    def getServersList(self, filePath):
        text_file = open(filePath, "r")
        self.serversList = text_file.readlines()
        print self.serversList
    
    def getServerStatus(self, serverAddress):
        gm_admin_client = gearman.GearmanAdminClient([serverAddress])
        # Inspect server state
        
        # Retrieves a list of all registered tasks and reports how many items/workers are in the queue
        status_response = gm_admin_client.get_status()
        #print status_response
        
        # Retrieves the version number of the Gearman server
        #version_response = gm_admin_client.get_version()
        #print version_response
        
        # Retrieves a list of workers and reports what tasks theyâ€™re operating on
        #workers_response = gm_admin_client.get_workers()
        #print workers_response
        return status_response
    
    def printStatus(self, statusData):
        # {'workers': 1, 'running': 0, 'task': 'makeclipfast', 'queued': 0} 
        print " %20s %8s %8s %8s" % ('task', 'workers', 'running', 'queued')
        for job in statusData:
            print "%20s: %8d %8d %8d" % (job['task'], job['workers'], job['running'], job['queued'])
    
    def showStatus(self):
        for server in self.serversList:
            print "Server status for %s" % server
            self.printStatus(self.getServerStatus(server.rstrip()))
            print
            
    def __init__(self, serversList):
        self.getServersList(serversList)

if __name__ == "__main__":
    gmcli = GearmanManagerCli("servers.conf")
    #while True:
    call("clear")
    gmcli.showStatus()
     #   time.sleep(5)